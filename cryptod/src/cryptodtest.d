
import std.stdio, std.conv, std.math, std.string, std.format, std.range;

import cryptod.blockcipher.aes;
import cryptod.blockcipher.des;
import cryptod.blockcipher.threefish;

import cryptod.hash.sha1;

void main()
{

	AES cryp = new AES([0x2b,0x7e,0x15,0x16,0x28,0xae,0xd2,0xa6,0xab,0xf7,0x15,0x88,0x09,0xcf,0x4f,0x3c]);
	
	string input = "I'm a little teapot short and stout, here is my handle, here is my stout.";
	
	writeln(cryp.toPlainText(cryp.plainTextToBytes(input)));
	
	ubyte[] encData = cryp.EncryptString(input);
	
	writeln(cryp.DecryptToString(encData));
	
	
	/*SHA1Context sha1test3 = new SHA1Context();
	
	string millionA;
	for(uint i = 0; i < 1000000; i++)
	{
		sha1test3.AddToContext("a");
		millionA ~= "a";
	}
		
	sha1test3.End();
	writeln(sha1test3.AsString());
	
	SHA1Context sha1test2 = new SHA1Context();
		sha1test2.AddToContext(millionA);
		sha1test2.End();
		writeln(sha1test2.AsString());*/
	
	
	
	//for (uint i=0;i<32;i++){ writef("%#x,",i);}
	//writeln("");
	
	//ubyte[] K = [0,0x1,0x2,0x3,0x4,0x5,0x6,0x7,0x8,0x9,0xa,0xb,0xc,0xd,0xe,0xf,0x10,0x11,0x12,0x13,0x14,0x15,0x16,0x17,0x18,0x19,0x1a,0x1b,0x1c,0x1d,0x1e,0x1f];
	//writeln(K.length);
	//ubyte[16] T = [0x00,0x01,0x2,0x3,0x4,0x5,0x6,0x7,0x8,0x9,0xa,0xb,0xc,0xd,0xe,0xf];
	//ubyte[] P = [0,0x1,0x2,0x3,0x4,0x5,0x6,0x7,0x8,0x9,0xa,0xb,0xc,0xd,0xe,0xf,0x10,0x11,0x12,0x13,0x14,0x15,0x16,0x17,0x18,0x19,0x1a,0x1b,0x1c,0x1d,0x1e,0x1f];
	
	//ubyte[]   K = cryp.plainTextToBytes("key of 32,64 or 128 bytes length");
	//ubyte[16] T = cryp.plainTextToBytes("tweak: 16 bytes ");
	//ubyte[]   P =  cryp.plainTextToBytes("block of data,same length as key");
	
	/*ubyte[]   K = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
	ubyte[16] T = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
	ubyte[]   P =  [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
	
	Threefish t = new Threefish(K,T);
	
	ubyte[] enc = t.Cipher(P);
	
	writeln(enc);
	
	writeln([0x94,0xEE,0xEA,0x8B,0x1F,0x2A,0xDA,0x84,0xAD,0xF1,0x03,0x31,0x3E,0xAE,0x66,0x70,0x95,0x24,0x19,0xA1,0xF4,0xB1,0x6D,0x53,0xD8,0x3F,0x13,0xE6,0x3C,0x9F,0x6B,0x11]);
	
	
	writeln(t.InvCipher(enc));*/
	
	ubyte[] DESK = [0,0,0,0,0,0,0,0];
	
	DES DESTest = new DES(DESK);
	
	writeln(DESTest.Cipher(DESK));
	
}

